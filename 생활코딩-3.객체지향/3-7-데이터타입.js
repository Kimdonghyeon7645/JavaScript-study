/*
맨처음 데이터 타입(자료형)에 대해서 가볍게 알아보는 형식으로 넘어갔는데,
이제 객체를 배웠으니, 그동안 배웠던 자료형을 크게 객체와 객체가 아닌 것, 두가지로 분리할 수 있다.

객체가 아닌 데이터 타입(자료형)은,
숫자
문자열(str)
불리언(bool)
null
undefined
가 있는데, 이런 데이터 타입을 원시 데이터 타입(primitive type)이라고 하며, 
이것을 뺀 나머지 데이터 타입은 모두 객체다. (배열도 그래서 객체다)
*/

var str = 'Cheri Cheri Lady'
console.log(str.length)
console.log(str.charAt(0))
/*
근데 위같이 문자열에서도 객체처럼, 프로퍼티와 메서드를 사용할 수 있다. 
원시 데이터 타입은 객체가 아니라는데 어떻게 객체처럼 프로퍼티와 메서드를 사용할 수 있을까?


사실 문자열(String), 숫자(Number), 불리언(Boolean)같은 데이터타입은 객체가 아니긴 하지만,
이러한 데이터 타입에 필요한 기능들이 있기에 이것들을 js에서 제공한다.
대신에 일반 객체와는 다르게 메서드나 프로퍼티가 사용되는 순간에 js에선 순간적으로 객체를 생성하고, 프로퍼티나 메서드의 사용이 끝나면 객체도 제거된다. 

이러한 문자, 숫자, 불리언 같은 원시 데이터 타입에 잠깐 생성되는 특수한 객체,
String, Number, Boolean을 레퍼 객체(wrapper object)라고 한다. 
(나머지 원시 데이터 타입인 null, undefined에는 레퍼 객체가 없다.)
*/