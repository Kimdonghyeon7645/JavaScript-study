/*
js의 비교연산자는 두 피연산자(연산의 대상)을 비교해서 
true(참) 아니면 false(거짓)으로 (= 불린(boolean) 데이터 형식) 반환하는 연산자다.
*/

alert(1==3)     //false
alert(2==2)     //true

alert('a'=='z')         //false
alert('일치'=='일치')   //true
/*
== 는 동등 연산자로, 좌항(왼쪽 값)과 우항(오른쪽 값)이 서로 같은지를 비교한다.
이때 서로 같다면 true(참), 서로 다르다면 false(거짓)을 반환한다.
(= 는 대입연산자로, ==와 다른 우항을 좌항으로 대입하는 연산자다. 둘이 헷갈리지 않도록 주의!)
*/


alert(1=='1');              //true
alert(1==='1');             //false

alert(null == undefined);       //true
alert(null === undefined);      //false

alert(true == 1);               //true
alert(true === 1);              //false
alert(true == '1');             //true
alert(true === '1');            //false

alert(false == 0);              //true
alert(false === 0);             //false
alert(false == '');             //true
alert(false === '');            //false

alert(0 === -0);                //true
alert(NaN === NaN);             //false
/*
=== 는 일치 연산자로, 좌항과 우항이 '정확'하게 같은지를 비교한다.
== 연산자로 '1'과 1을 비교하면 true(참)으로 나오는데, 
=== 연산자로 비교하면 false(거짓)이 나온다. 
서로 같은 1이라 해도 데이터 형이 같은 경우에만 둘이 같다고 판단하기 때문이다.

이것이 일치 연산자의 '정확'이다.
이런 '정확'때문에 특별한 경우 빼곤, == 연산자 대신 === 연산자를 쓰는게 강추된다.
*/

alert(1 != 1)       //false
alert(1 != 3)       //true
alert(1 != '1')     //false
/*
!= 는 ==(동등 연산자)와 반환값이 반대다.
좌항과 우항이 같지 않은지를 비교해서, 같지않으면 true(참), 같으면 false(거짓)이 나온다.
!가 부정(논리부정, not)을 의미하는 것 답게 != 은 ==의 논리부정(!)한 값을 반환한다.


!== 는 마찬가지로 ===)일치 연산자)와 반환값이 반대다.
!= 이 == 의 반환값과 반대라면, !== 은 === 의 반환값과 반대다.
*/

alert(3 > 2)        //true
alert(2 < 3)        //true
alert(3 >= 3)        //true
alert(2 <= 2)        //true
/*
> 과 < 는 부등호와 같다. 
>는 좌항이 우항보다 크면 참, 아니면 거짓을 반환하고,
<는 우항이 좌항보다 크면 참, 아니면 거짓을 반환한다.


>= 과 <= 는 ~이상, ~이하와 같다. 
>=는 좌항이 우항보다 크거나 같으면 참, 아니면 거짓을 반환하고,
<=는 우항이 좌항보다 크거나 같으면 참, 아니면 거짓을 반환한다.
*/